#!/bin/sh

# Organization: MDIBL
# Author: Lucie Hutchins
# Date: October 2017
# Modified: February 2018
#
# This script is called by the main install script 
# (install_package.sh)  to build and install 
# a new version of the package 
#
# What it does:
# 1) source the main config file to set global path
# 2) configure and build the package
# 3) install the package
#
# Note: the following environment variables are expected to be set
# by the caller
# 1) GLOBAL_CONFIG
# 2) PACKAGE_BASE
# 3) PACKAGE_DEPENDS
#
cd `dirname $0`
SCRIPT_NAME=`basename $0`
WORKING_DIR=`pwd`
echo "==" 
echo "Server Name: `uname -n`" 
echo "Install Date: `date`" 
if [ ! -f ../${GLOBAL_CONFIG} ]
then
  echo "'../${GLOBAL_CONFIG}' file missing "     
  exit 1
fi
source ./../${GLOBAL_CONFIG}
if [ "${PACKAGE_DEPENDS}" = "" ]
then
   echo "ERROR: PACKAGE_DEPENDS not set"
   exit 1
fi
PACKAGE_DEPENDENCIES_FILE=`basename ${PACKAGE_DEPENDS}`
source ./${PACKAGE_DEPENDENCIES_FILE}
if [ ! -d ${PACKAGE_BASE} ]
then
   echo "ERROR: Missing the install directory ${PACKAGE_BASE} "
   exit 1
fi
cd ${PACKAGE_BASE}

if [ ! -f configure ]
then
   echo "Generating 'configure' file  under `pwd`" 
   autoheader
   autoconf -Wno-syntax
fi
# Run the install commands
if [ ! -f  configure ]
then
   echo "${PACKAGE_BASE}/configure missing" 
   exit 1  
fi
#
#specify that samtools is to be built and installed into bin,
# lib, etc subdirectories under $PACKAGE_BASE.

./configure  --prefix=${SOFTWARE_BASE} --with-htslib=${SOFTWARE_BASE}  2>&1 
make  2>&1
[ $? -ne 0 ] && exit 1
make install 2>&1 
[ $? -ne 0 ] && exit 1
#Check the install
rstatus="SUCCESS"
for folder in ${DIR_CHECK}
do
    if [ ! -d ${PACKAGE_BASE}/${folder} ]
    then
       echo "${PACKAGE_BASE}/${folder} missing" 
       rstatus="FAILED"
     fi
done

if [ "${rstatus}" == FAILED ]
then
   echo "${rstatus}" 
   exit 1
fi

# Copy the header files to the bam include directory
[ ! -d  ${SOFTWARE_INCLUDE_BASE}/bam ] &&mkdir -p ${SOFTWARE_INCLUDE_BASE}/bam

#cp ${PACKAGE_BASE}/*.h ${SOFTWARE_INCLUDE_BASE}/bam/

echo ${rstatus} 

exit 0

