#!/bin/sh

# Organization: MDIBL
# Author: Lucie Hutchins
# MODIFIED: March 2018
#
# This script is called by the main install script 
# (install_package.sh)  to build and install 
# a new version of the package 
#
# What it does:
# 1) source the main config file to set gloabl path
# 2) source the dependencies config file
# 3) source package config file
# 3) build and install package
#
# Note: the following environment variables are expected to be set
# by the caller
# 1) GLOBAL_CONFIG
# 2) PACKAGE_DEPENDS
# 3) PACKAGE_CONFIG_FILE
#
cd `dirname $0`
SCRIPT_NAME=`basename $0`
WORKING_DIR=`pwd`

echo "==" 
echo "Server Name: `uname -n`" 
echo "Install Date: `date`" 
if [ ! -f ../${GLOBAL_CONFIG} ]
then
  echo "'../${GLOBAL_CONFIG}' file missing "     
  exit 1
fi
source ./../${GLOBAL_CONFIG}
if [ "${PACKAGE_DEPENDS}" = "" ]
then
   echo "ERROR: PACKAGE_DEPENDS not set"
   exit 1
fi

PACKAGE_DEPENDENCIES_FILE=`basename ${PACKAGE_DEPENDS}`
source ./${PACKAGE_DEPENDENCIES_FILE}
toil_config=`basename ${PACKAGE_CONFIG_FILE}`

if [ ! -f ${toil_config} ]
then
  echo "'${toil_config}' file missing under `pwd` "     
  exit 1
fi
source ./${toil_config}
## Download virtual env 
cd ${EXTERNAL_SOFTWARE_BASE}/${GIT_REPOS}
curl -O ${VIRTUAL_ENV_URL}
${TAR} xvfz ${VIRTUAL_ENV_FILE}
cd ${VIRTUAL_ENV_DIR}
#Create virtualenv directory for this repos as needed
if [ ! -d ${TOIL_BASE} ]
then
    mkdir -p ${TOIL_BASE}
    #${VIRTUALENV} -p ${PYTHON} ${TOIL_BASE}
   ${PYTHON} virtualenv.py ${TOIL_BASE}
fi
#
# activate virtualenv
source $TOIL_BASE/bin/activate
#upgrade pip just in case there is a newer version

pip install toil 2>&1 
pip install toil cwl 2>&1 

#exit virtualenv
#
deactivate

cd ${EXTERNAL_SOFTWARE_BASE}/${GIT_REPOS}
[ -d ${RELEASE_DIR} ] && rm -rf ${RELEASE_DIR}
ln -s  ${TOIL_BASE}

#Check the install
rstatus="SUCCESS"
for bin_file in ${FILE_CHECK}
do
    if [ ! -f ${TOIL_BASE}/${bin_file} ]
    then
       echo "${TOIL_BASE}/${bin_file} missing"
       rstatus="FAILED"
     fi
done
echo "$rstatus" 
[ "$rstatus" == FAILED ] && exit 1

## Create symbolic link under global path
#
mkdir -p ${BLOBAL_VIRTUAL_ENV_BASE}
cd ${BLOBAL_VIRTUAL_ENV_BASE}
ln -s ${TOIL_BASE} 
rm -f ${GIT_REPOS}
ln -s ${TOIL_BASE} ${GIT_REPOS}
#make clean
exit 0

